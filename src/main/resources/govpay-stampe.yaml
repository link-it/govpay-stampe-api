openapi: 3.0.3

info:
  title: Stampa Avvisi pagoPA
  version: 0.1.0
  contact:
    name: Link.it
    email: info@link.it
servers:
  - url: https://govhub.backoffice.it/api/v3
    description: Sample Deployment URL (Not Actual)
paths:

  '/standard':
    post:
      summary: Avviso di pagamento con e senza rate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentNotice'
        required: true      
      responses:
        '201':
          description: Avviso stampato
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: "#/components/responses/400BadRequest"
        '401':
          $ref: "#/components/responses/401Unauthorized"
        '403':
          $ref: "#/components/responses/403Forbidden"
        '404':
          $ref: "#/components/responses/404NotFound"
        '503':
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/ResponseDefault"        

  '/cds_violation':
    post:
      summary: Violazione del Codice della Strada
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdsViolation'
        required: true      
      responses:
        '201':
          description: Avviso stampato
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: "#/components/responses/400BadRequest"
        '401':
          $ref: "#/components/responses/401Unauthorized"
        '403':
          $ref: "#/components/responses/403Forbidden"
        '404':
          $ref: "#/components/responses/404NotFound"
        '503':
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/ResponseDefault"
          
components:
  responses:
    '400BadRequest':
      description: Bad Request.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
          example:
            detail: "Missing required field."
            status: 400
            title: "Bad Request"
            type: "https://www.rfc-editor.org/rfc/rfc9110.html#name-400-bad-request"
    '401Unauthorized':
      description: "Required credentials missing."
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
          example:
            detail: "Invalid Credentials"
            status: 401
            title: "Unauthorized"
            type: "https://www.rfc-editor.org/rfc/rfc9110.html#name-401-unauthorized"
    '403Forbidden':
      description: Agent not authorized for the operation.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
          example:
            detail: "User not authorized for the operation."
            status: 403
            title: "Forbidden"
            type: "https://www.rfc-editor.org/rfc/rfc9110.html#name-403-forbidden"
    '404NotFound':
      description: Not Found.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
          example:
            detail: "Resource not found."
            status: 404
            title: "Not Found"
            type: "https://www.rfc-editor.org/rfc/rfc9110.html#name-404-not-found"
    '409Conflict':
      description: Conflict (The entity already exists).
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
          example:
            detail: "Resource with the same id already present"
            status: 409
            title: "Conflict"
            type: "https://www.rfc-editor.org/rfc/rfc9110.html#name-409-conflict"
    '503ServiceUnavailable':
      description: Service Unavailable.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
          example:
            detail: Request Can't be fulfilled at the moment.  
            status: 503
            title: Service Unavailable
            type: "https://www.rfc-editor.org/rfc/rfc9110.html#name-503-service-unavailable"
    'ResponseDefault':
      description: Unexpected error.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
  schemas:
    Creditor:
      type: object
      required:
        - fiscal_code
        - business_name
      properties:
        fiscal_code:
          type: string
          maxLength: 16
          example: "01234567890"
        business_name:
          type: string
          maxLength: 50
          example: "Comune di Test"
        department_name:
          type: string
          maxLength: 50
          example: "Ufficio dimostrativo"
        info_line_1:
          type: string
          maxLength: 50
          example: "Tel 000-000 0000 Â· Fax 000-000 0000"
        info_line_2:
          type: string
          maxLength: 50
          example: "Mail info@comune.test.it"
        cbill_code:
          type: string
          pattern: "[A-Z0-9]{5}"
    Debtor:
      type: object
      required:
        - fiscal_code
        - full_name
      properties:
        fiscal_code:
          type: string
          maxLength: 16
          example: "AAAAAA00A00A000A"
        full_name:
          type: string
          maxLength: 70
          example: "Nomen Nescio"
        address_line_1:
          type: string
          maxLength: 70
          example: "Viale dei Giardini, 00"
        address_line_2:
          type: string
          maxLength: 70
          example: "00000 Roma (RM)"
          
    NoticeMetadata:
      type: object
      additionalProperties: false
      required:
        - language
        - first_logo
        - creditor
        - debtor
        - pages
      properties:
        language:
          $ref: '#/components/schemas/Languages'
        first_logo:
          type: string
          format: binary
        second_logo:
          type: string
          format: binary
        title:
          type: string
          maxLength: 70
          example: "Avviso di pagamento"
        second_language:
          type: object
          properties:
            bilinguism:
              type: boolean
            language:
              $ref: '#/components/schemas/Languages'
            title:
              type: string
              maxLength: 70            
          required:
            ["bilinguism", "language", "title"]
          example:
            bilinguism: false
            language: "eng"
            title: "Payment advice"
        creditor:
          $ref: '#/components/schemas/Creditor'
        debtor:
          $ref: '#/components/schemas/Debtor'
        postal:
          type: boolean

    CdsViolation:
      allOf:
        - $ref: '#/components/schemas/NoticeMetadata'
        - type: object
          required: ["discounted_amount", "reduced_amount"]
          properties:
            discounted_amount:
              $ref: '#/components/schemas/Amount'
            reduced_amount:
              $ref: '#/components/schemas/Amount'

    PaymentNotice:
      allOf:    
        - $ref: '#/components/schemas/NoticeMetadata'
        - type: object
          properties:
            full:
              $ref: '#/components/schemas/Amount'
            instalments:
              type: array
              items:
                $ref: '#/components/schemas/Instalment'
                
    Instalment:
      allOf:
        - $ref: '#/components/schemas/Amount'
        - type: object
          required: ["properties"]
          properties:
            instalment_number:
              type: integer
    Amount:
      type: object
      required:
        - amount
        - notice_number
        - qrcode
      properties:
        amount:
          type: number
          format: double
          minimum: 0.01
        due_date:
          type: string
          format: date
        notice_number:
          type: string
          pattern: "[0-9]{18}"
        qrcode:
          type: string

    Languages:
      enum:
        - it
        - en
        - de
        - fr
        - sl
    Problem:
      type: object
      additionalProperties: false
      properties:
        detail:
          type: string
          description: A human readable description of the occurred problem.
          example: Connection to database timed out
          maxLength: 255
          pattern: ^[ -~]+$
        instance:
          type: string
          description: Link to a specific occurence of the problem.
          format: uri
          maxLength: 255
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: integer
          description: HTTP Status Code.
          format: int32
          example: 503
        title:
          type: string
          description: Short description of the occurred problem.
          maxLength: 255
          pattern: ^[ -~]+$
          example: Service Unavailable        
        type:
          type: string
          description: Absolute URI for the problem description.
          maxLength: 255
          format: uri
          example: "https://tools.ietf.org/html/rfc7231#section-6.6.4"
          default: about:blank
